<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <meta name="color-scheme" content="dark light">
    <title>@(ViewData["Title"] ?? "Online Status") - Meercat Monitor</title>
    <link rel="icon" href="~/favicon-64.avif" />
    <style>
        :root {
            --color-bg: light-dark(white, black);
            --color-online: green;
            --color-offline: #880000;
            --color-bg-weak-hl: #66666688;
            --color-bg-hl: #82828230;
            --color-hour-separator: #848484a1;
            padding: 0 1em;
            background: var(--color-bg);
        }

        a {
            text-decoration: none;
            color: inherit;
        }

        .group-title {
            position: sticky;
            top: 0;
            background: var(--color-bg);
        }

        .targets-summary {
            margin-bottom: 1em;
            display: flex;
            align-items: center;
            gap: 2em;
        }

        .target-jump-link {
            padding: 0.5em;
        }

        .target-jump-link:hover {
            background-color: var(--color-bg-hl);
        }

        .target {
            display: flex;
            flex-direction: column;
            gap: 1em;
            margin-bottom: 2em;
        }

        .target-header {
            display: flex;
            align-items: baseline;
            gap: 2em;
            position: sticky;
            top: 28px;
            background: var(--color-bg);
            padding-bottom: 0.5em;
        }

        .status.online {
            background: var(--color-online);
        }

        .status.offline {
            background: var(--color-offline);
        }

        .status-info {
            vertical-align: super;
        }

        .status-info:hover .time {
            opacity: 1;
            width: 200px;
        }

        .time {
            font-style: italic;
            display: inline-block;
            opacity: 0;
            width: 0;
            transition: opacity 1s, width 1s;
            overflow: hidden;
            white-space: nowrap;
        }

        .history {
            border-left: 1px dotted var(--color-bg-weak-hl);
            padding-left: 0.5em;
            display: grid;
            grid-template-columns: 1fr;
        }

        .history-day {
            border-left: 1px dotted var(--color-bg-weak-hl);
            border-bottom: 1px dotted var(--color-bg-weak-hl);
            padding: 0.5em 1em;
            margin: 0.2em 0;
        }

        .day-history {
            display: flex;
            flex-wrap: wrap;
            gap: 1em 2px;
            align-items: end;
        }

        .status-container {
            display: flex;
            align-items: end;
        }

        .status-container:hover {
            outline: 1px solid var(--color-bg-hl);
            background-color: var(--color-bg-hl);
        }

        .status-container:hover .status.online {
            filter: brightness(2);
        }

        .status-container:hover .status.offline {
            filter: brightness(2);
        }

        .new-hour {
            border-right: 1px dashed var(--color-hour-separator);
        }

        .history .status {
            width: 1em;
            min-height: 4px;
            max-height: 100%;
        }

        #tooltip-overlay {
            white-space: pre;
        }
    </style>
</head>
<body>
    @RenderBody()
    <div id="tooltip-overlay" popover="hint"></div>
    <script>
        const tt = document.getElementById('tooltip-overlay')
        for (const x of document.querySelectorAll('.status-container[title]')){
            x.addEventListener('mouseover', ev => {
                tt.hidePopover()
                const source = ev.target
                tt.innerHTML = source.getAttribute('title')
                tt.showPopover({'source': source})
            })
            x.addEventListener('mouseout', ev => {
                tt.hidePopover()
            })
        }
    </script>
</body>
</html>
